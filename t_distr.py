# 1 tail test
# df  alpha: 0.1 alpha:0.05   alpha: 0.01
# 1    3.0777     6.3138      31.8205     
# 2    1.8856     2.9200      6.9646
# 3    1.6377     2.3534      4.5407
# 4    1.5332     2.1318      3.7469
# 5    1.4759     2.0150      3.3649
# 6    1.4398     1.9432      3.1427
# 7    1.4149     1.8946      2.9980
# 8    1.3968     1.8595      2.8965
# 9    1.3830     1.8331      2.8214
# 10    1.3722    1.8125      2.7638
# 11    1.3634    1.7959      2.7181
# 12    1.3562    1.7823      2.681O
# 13    1.3502    1.7709      2.6503
# 14    1.3450    1.7613      2.6245
# 15    1.3406    1.7531      2.6025
# 16    1.3368    1.7459      2.5835
# 17    1.3334    1.7396      2.5669
# 18    1.3304    1.7341      2.5524
# 19    1.3277    1.7291      2.5395
# 20    1.3253    1.7247      2.5280
# 21    1.3232    1.7207      2.5176
# 22    1.3212    1.7171      2.5083
# 23    1.3195    1.7139      2.4999
# 24    1.3178    1.7109      2.4922
# 25    1.3163    1.7081      2.4851
# 26    1.3150    1.7056      2.4786
# 27    1.3137    1.7033      2.4727
# 28    1.3125    1.7011      2.4671
# 29    1.3114    1.6991      2.4620
# 30    1.3104    1.6973      2.4573

# 2 tail test
# df      alpha: 0.1 alpha:0.05   alpha: 0.01
# 1       6.3138      12.7062     63.6567    
# 2       2.9200      4.3027      9.9248
# 3       2.3534      3.1824      5.8409
# 4       2.1318      2.7764      4.6041
# 5       2.0150      2.5706      4.0321
# 6       1.9432      2.4469      3.7074
# 7       1.8946      2.3646      3.4995
# 8       1.8595      2.3060      3.3554
# 9       1.8331      2.2622      3.2498
# 10      1.8125      2.2281      3.1693
# 11      1.7959      2.2010      3.1058
# 12      1.7823      2.1788      3.0545
# 13      1.7709      2.1604      3.0123
# 14      1.7613      2.1448      2.9768
# 15      1.7531      2.1314      2.9467
# 16      1.7459      2.1199      2.9208
# 17      1.7396      2.1098      2.8982
# 18      1.7341      2.1009      2.8784
# 19      1.7291      2.0930      2.8609
# 20      1.7247      2.0860      2.8453
# 21      1.7207      2.0796      2.8314
# 22      1.7171      2.0739      2.8188
# 23      1.7139      2.0687      2.8073
# 24      1.7109      2.0639      2.7969
# 25      1.7081      2.0595      2.7874
# 26      1.7056      2.0555      2.7787
# 27      1.7033      2.0518      2.7707
# 28      1.7011      2.0484      2.7633
# 29      1.6991      2.0452      2.7564
# 30      1.6973      2.0423      2.7500


def get_t_value(df, alpha, tails):
    # Define the t-table values
    t_table_1_tail = {
        1: {0.1: 3.0777, 0.05: 6.3138, 0.01: 31.8205},
        2: {0.1: 1.8856, 0.05: 2.9200, 0.01: 6.9646},
        3: {0.1: 1.6377, 0.05: 2.3534, 0.01: 4.5407},
        4: {0.1: 1.5332, 0.05: 2.1318, 0.01: 3.7469},
        5: {0.1: 1.4759, 0.05: 2.0150, 0.01: 3.3649},
        6: {0.1: 1.4398, 0.05: 1.9432, 0.01: 3.1427},
        7: {0.1: 1.4149, 0.05: 1.8946, 0.01: 2.9980},
        8: {0.1: 1.3968, 0.05: 1.8595, 0.01: 2.8965},
        9: {0.1: 1.3830, 0.05: 1.8331, 0.01: 2.8214},
        10: {0.1: 1.3722, 0.05: 1.8125, 0.01: 2.7638},
        11: {0.1: 1.3634, 0.05: 1.7959, 0.01: 2.7181},
        12: {0.1: 1.3562, 0.05: 1.7823, 0.01: 2.6810},
        13: {0.1: 1.3502, 0.05: 1.7709, 0.01: 2.6503},
        14: {0.1: 1.3450, 0.05: 1.7613, 0.01: 2.6245},
        15: {0.1: 1.3406, 0.05: 1.7531, 0.01: 2.6025},
        16: {0.1: 1.3368, 0.05: 1.7459, 0.01: 2.5835},
        17: {0.1: 1.3334, 0.05: 1.7396, 0.01: 2.5669},
        18: {0.1: 1.3304, 0.05: 1.7341, 0.01: 2.5524},
        19: {0.1: 1.3277, 0.05: 1.7291, 0.01: 2.5395},
        20: {0.1: 1.3253, 0.05: 1.7247, 0.01: 2.5280},
        21: {0.1: 1.3232, 0.05: 1.7207, 0.01: 2.5176},
        22: {0.1: 1.3212, 0.05: 1.7171, 0.01: 2.5083},
        23: {0.1: 1.3195, 0.05: 1.7139, 0.01: 2.4999},
        24: {0.1: 1.3178, 0.05: 1.7109, 0.01: 2.4922},
        25: {0.1: 1.3163, 0.05: 1.7081, 0.01: 2.4851},
        26: {0.1: 1.3150, 0.05: 1.7056, 0.01: 2.4786},
        27: {0.1: 1.3137, 0.05: 1.7033, 0.01: 2.4727},
        28: {0.1: 1.3125, 0.05: 1.7011, 0.01: 2.4671},
        29: {0.1: 1.3114, 0.05: 1.6991, 0.01: 2.4620},
        30: {0.1: 1.3104, 0.05: 1.6973, 0.01: 2.4573},
    }

    t_table_2_tail = {
        1: {0.1: 6.3138, 0.05: 12.7062, 0.01: 63.6567},
        2: {0.1: 2.9200, 0.05: 4.3027, 0.01: 9.9248},
        3: {0.1: 2.3534, 0.05: 3.1824, 0.01: 5.8409},
        4: {0.1: 2.1318, 0.05: 2.7764, 0.01: 4.6041},
        5: {0.1: 2.0150, 0.05: 2.5706, 0.01: 4.0321},
        6: {0.1: 1.9432, 0.05: 2.4469, 0.01: 3.7074},
        7: {0.1: 1.8946, 0.05: 2.3646, 0.01: 3.4995},
        8: {0.1: 1.8595, 0.05: 2.3060, 0.01: 3.3554},
        9: {0.1: 1.8331, 0.05: 2.2622, 0.01: 3.2498},
        10: {0.1: 1.8125, 0.05: 2.2281, 0.01: 3.1693},
        11: {0.1: 1.7959, 0.05: 2.2010, 0.01: 3.1058},
        12: {0.1: 1.7823, 0.05: 2.1788, 0.01: 3.0545},
        13: {0.1: 1.7709, 0.05: 2.1604, 0.01: 3.0123},
        14: {0.1: 1.7613, 0.05: 2.1448, 0.01: 2.9768},
        15: {0.1: 1.7531, 0.05: 2.1314, 0.01: 2.9467},
        16: {0.1: 1.7459, 0.05: 2.1199, 0.01: 2.9208},
        17: {0.1: 1.7396, 0.05: 2.1098, 0.01: 2.8982},
        18: {0.1: 1.7341, 0.05: 2.1009, 0.01: 2.8784},
        19: {0.1: 1.7291, 0.05: 2.0930, 0.01: 2.8609},
        20: {0.1: 1.7247, 0.05: 2.0860, 0.01: 2.8453},
        21: {0.1: 1.7207, 0.05: 2.0796, 0.01: 2.8314},
        22: {0.1: 1.7171, 0.05: 2.0739, 0.01: 2.8188},
        23: {0.1: 1.7139, 0.05: 2.0687, 0.01: 2.8073},
        24: {0.1: 1.7109, 0.05: 2.0639, 0.01: 2.7969},
        25: {0.1: 1.7081, 0.05: 2.0595, 0.01: 2.7874},
        26: {0.1: 1.7056, 0.05: 2.0555, 0.01: 2.7787},
        27: {0.1: 1.7033, 0.05: 2.0518, 0.01: 2.7707},
        28: {0.1: 1.7011, 0.05: 2.0484, 0.01: 2.7633},
        29: {0.1: 1.6991, 0.05: 2.0452, 0.01: 2.7564},
        30: {0.1: 1.6973, 0.05: 2.0423, 0.01: 2.7500},
    }

    # Select the appropriate table based on the tails parameter
    t_table = t_table_1_tail if tails == 1 else t_table_2_tail

    # Check if the degrees of freedom (df) is in the table
    if df in t_table:
        # Check if the alpha is in the table
        if alpha in t_table[df]:
            return t_table[df][alpha]
        else:
            raise ValueError(f"Invalid alpha value. Choose from {list(t_table[df].keys())}.")
    else:
        raise ValueError(f"Invalid degrees of freedom (df). Use a valid value available in the table.")

# Example usage:
df = 21
alpha = 0.01
tails = 2
t_value = get_t_value(df, alpha, tails)
# print(f"The t-value for {tails}-tail test, {df} degrees of freedom, and alpha = {alpha} is: {t_value}")
print(get_t_value(alpha=0.05,df=19, tails=2))